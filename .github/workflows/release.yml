name: Create Release
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment (release, preview)'
        default: 'release'
        required: true
      version:
        description: 'Release Version'
        required: true

jobs:
  build_ui:
    name: Build UI
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node 15.x
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: Install dependencies
        working-directory: './WebUI'
        run: yarn install
      - name: Build
        working-directory: './WebUI'
        run: |
          $env:VERSION='${{ github.event.inputs.version }}'
          yarn build
      - name: Upload WebUI Artifact
        uses: actions/upload-artifact@v2
        with:
          name: webui-build
          retention-days: 1
          path: ui.vuic
  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build_ui
    steps:
      - name: Download WebUI Artifact
        uses: actions/download-artifact@v2
        with:
          name: webui-build
      - name: Create Artifact
        run: |
          zip -i **/*.lua ui.vuic mod.json -r MapEditor .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MapEditor.zip
          asset_name: MapEditor.zip
          asset_content_type: application/zip
      - name: Publish to VUMM as tag ${{ github.event.inputs.env }}
        if: ${{ github.event.inputs.env != 'release' }}
        uses: BF3RM/vumm-action@v1
        env:
          VUMM_TOKEN: ${{ secrets.VUMM_TOKEN }}
        with:
          tag: ${{ github.event.inputs.env }}
      - name: Publish to VUMM as latest
        if: ${{ github.event.inputs.env == 'release' }}
        uses: BF3RM/vumm-action@v1
        env:
          VUMM_TOKEN: ${{ secrets.VUMM_TOKEN }}